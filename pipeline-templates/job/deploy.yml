parameters:
  ServiceConnection:
  SolutionBaseName:
  Environment:

jobs:
- deployment: DeployWebApp
  pool:
    name: DAS - Continuous Deployment Agents
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.json
            ParametersPath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.parameters.json
            IsMultiRepoCheckout: true
            TemplateSecrets:
              LoggingRedisConnectionString: $(LoggingRedisConnectionString)
              ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)
        - template: azure-pipelines-templates/deploy/step/get-apim-subscription-key.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            ApimResourceGroup: $(SharedApimResourceGroup)
            ApimName: $(SharedApimName)
            SubscriptionId: $(AppServiceName)
            PipelineVariableName: ApprovalsApimSubscriptionKey
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/generate-config.yml@das-platform-building-blocks
          parameters:
            EnvironmentName: $(EnvironmentName)
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SourcePath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-employercommitments-v2
            StorageAccountName: $(ConfigurationStorageAccountName)
            StorageAccountResourceGroup: $(SharedEnvResourceGroup)
            TargetFileName: '*.schema.json'
            TableName: Configuration
            ConfigurationSecrets:
              SharedRedisConnectionString: $(SharedRedisConnectionString)
              ApprovalsApimSubscriptionKey: $(ApprovalsApimSubscriptionKey)
              AuthenticationConfiguration:ClientSecret: $(AuthenticationConfiguration:ClientSecret)
              UserBearerTokenSigningKey: $(UserBearerTokenSigningKey)
        - template: azure-pipelines-templates/deploy/step/app-role-assignments.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.AppRoleAssignmentsServiceConnection }}
            ResourceName: $(AppServiceName)
            Tenant: $(Tenant)
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: $(AppServiceName)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Web.zip