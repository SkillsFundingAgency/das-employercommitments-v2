@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.EmployerCommitmentsV2.Web.Extensions
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Shared.DraftApprenticeshipViewModel
@inject SFA.DAS.Authorization.Services.IAuthorizationService AuthorizationService

@Html.HiddenFor(x => x.ReservationId)
@Html.HiddenFor(x => x.StandardUId)

<div class="govuk-form-group">
    <fieldset class="govuk-fieldset">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
            Training provider
        </legend>
        <div>
            <span class="govuk-label">@Model.ProviderName</span>
        </div>
    </fieldset>
</div>

@if (Model.IsContinuation)
{
    @Html.HiddenFor(x => x.FirstName)
    @Html.HiddenFor(x => x.LastName)
    @Html.HiddenFor(x => x.Email)
    @Html.HiddenFor(x => x.BirthDay)
    @Html.HiddenFor(x => x.BirthMonth)
    @Html.HiddenFor(x => x.BirthYear)
    @Html.HiddenFor(x => x.Uln)
    @Html.HiddenFor(x => x.DeliveryModel)
    @Html.HiddenFor(x => x.CourseCode)

    <dl class="das-definition-list">
        <dt class="das-definition-list__title">Apprentice name</dt>
        <dd class="das-definition-list__definition">@Model.FirstName @Model.LastName</dd>
    </dl>

    <dl class="das-definition-list">
        <dt class="das-definition-list__title">Date of birth</dt>
        <dd class="das-definition-list__definition">@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Date.Value.ToGdsFormat() : string.Empty)</dd>
    </dl>

    <dl class="das-definition-list">
        <dt class="das-definition-list__title">Unique learner number</dt>
        <dd class="das-definition-list__definition">@Model.Uln</dd>
    </dl>
    <dl class="das-definition-list">
        <dt class="das-definition-list__title">Apprenticeship training course</dt>
        <dd class="das-definition-list__definition">@Model.Courses.Single(x => x.CourseCode == Model.CourseCode).Name</dd>
    </dl>
    @if (Model.DeliveryModel == DeliveryModel.PortableFlexiJob)
    {
        <dl class="das-definition-list">
            <dt class="das-definition-list__title">Apprenticeship delivery model</dt>
            <dd class="das-definition-list__definition">@Model.DeliveryModel.ToDescription()</dd>
        </dl>
    }
}
else
{
    <div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                Apprentice name
            </legend>
            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.FirstName, "govuk-form-group--error")">
                <label asp-for="FirstName" class="govuk-label">First name</label>
                @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.FirstName) })
                <input asp-for="FirstName" class="govuk-input" />
            </div>
            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.LastName, "govuk-form-group--error")">
                <label asp-for="LastName" class="govuk-label">Last name</label>
                @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.LastName) })
                <input asp-for="LastName" class="govuk-input" />
            </div>
            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Email, "govuk-form-group--error")">
                <details class="govuk-details" data-module="govuk-details">
                    <summary class="govuk-details__summary">
                        <span class="govuk-details__summary-text">
                            Email address
                        </span>
                    </summary>
                    <div class="govuk-details__text">
                        Your apprentice will receive an email alert inviting them to the My apprenticeship service. On the service, your apprentice will be able to:
                        <ul>
                            <li>review and confirm their apprenticeship details</li>
                            <li>understand the roles and responsibilities of an apprentice, an employer and a training provider</li>
                            <li>find help and support during their apprenticeship</li>
                        </ul>
                    </div>
                </details>
                @Html.ValidationMessageFor(m => m.Email, null, new {@class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Email)})
                <input asp-for="Email" class="govuk-input"/>
            </div>
        </fieldset>
    </div>
    <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.DateOfBirth, "govuk-form-group--error")">
        <fieldset class="govuk-fieldset" aria-describedby="dob-hint" role="group">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                Date of birth
            </legend>
            <span id="dob-hint" class="govuk-hint">
                For example, 31 3 1980
            </span>
            @Html.ValidationMessageFor(m => m.DateOfBirth, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.DateOfBirth) })
            <div class="govuk-date-input">
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="BirthDay" class="govuk-label govuk-date-input__label">Day</label>
                        <input asp-for="BirthDay" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="2" min="1" max="31"
                               class="govuk-input govuk-date-input__input govuk-input--width-2 length-limit">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="BirthMonth" class="govuk-label govuk-date-input__label">Month</label>
                        <input asp-for="BirthMonth" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="2" min="1" max="12"
                               class="govuk-input govuk-date-input__input govuk-input--width-2 length-limit">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="BirthYear" class="govuk-label govuk-date-input__label">Year</label>
                        <input asp-for="BirthYear" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="4" min="1900" max="9999"
                               class="govuk-input govuk-date-input__input govuk-input--width-4 length-limit">
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Uln, "govuk-form-group--error")">
        <label asp-for="Uln" class="govuk-label govuk-!-font-weight-bold">Unique learner number</label>
        <span id="dob-hint" class="govuk-hint">
            <span id="uln">@(Model.Uln == null ? "This will be added by your training provider." : Model.Uln)</span>
            @Html.HiddenFor(x => x.Uln)
        </span>
    </div>

    @if (AuthorizationService.IsAuthorized(SFA.DAS.EmployerCommitmentsV2.Features.EmployerFeature.DeliveryModel))
    {
        <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.DeliveryModel, "govuk-form-group--error")">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    Delivery model
                </legend>
                @Html.ValidationMessageFor(m => m.DeliveryModel, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.DeliveryModel) })
                <div class="govuk-radios">
                    <div class="govuk-radios__item">
                        <input type="radio" asp-for="DeliveryModel" class="govuk-radios__input" value="@DeliveryModel.Regular" id="DeliveryModelNormal" aria-describedby="DeliveryModelNormal-hint">
                        <label for="DeliveryModelNormal" class="govuk-label govuk-radios__label">
                            Regular
                        </label>
                        <div id="DeliveryModelNormal-hint" class="govuk-hint govuk-radios__hint">
                            The apprentice will have a single employer
                        </div>
                    </div>
                    <div class="govuk-radios__item">
                        <input type="radio" asp-for="DeliveryModel" class="govuk-radios__input" value="@DeliveryModel.PortableFlexiJob" id="DeliveryModelFlexible" aria-describedby="DeliveryModelFlexible-hint">
                        <label for="DeliveryModelFlexible" class="govuk-label govuk-radios__label">
                            Portable flexi-job
                        </label>
                        <div id="DeliveryModelFlexible-hint" class="govuk-hint govuk-radios__hint">
                            The apprentice will move between multiple employers
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    }
    else
    {
        <input type="hidden" asp-for="DeliveryModel" class="govuk-radios__input" value="@(Model.DeliveryModel ?? DeliveryModel.Regular)">
    }

    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.CourseCode, "govuk-form-group--error")">
        <label asp-for="CourseCode" class="govuk-label govuk-!-font-weight-bold">Apprenticeship training course</label>
        <span id="course-name-hint" class="govuk-hint">Start typing the name of the course or choose an option from the list </span>
        @Html.ValidationMessageFor(m => m.CourseCode, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.CourseCode) })
        <select class="govuk-select govuk-!-width-three-quarters" asp-for="CourseCode" asp-items="@(new SelectList(Model.Courses, "CourseCode", "Name"))" aria-describedby="course-name-hint">
            <option value="">Please select an option</option>
        </select>
    </div>

}

<div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.StartDate, "govuk-form-group--error")">
    <fieldset class="govuk-fieldset" aria-describedby="start-date-hint" role="group">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
            Planned training start date
        </legend>
        <span id="start-date-hint" class="govuk-hint">
            For example, 09 2021 <br />
            The standard version will be based on the start date provided
        </span>
        @Html.ValidationMessageFor(m => m.StartDate, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.StartDate) })
        <div class="govuk-date-input">
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="StartMonth" class="govuk-label govuk-date-input__label length-limit">Month</label>
                    <input asp-for="StartMonth" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="2" min="1" max="12"
                           class="govuk-input govuk-date-input__input govuk-input--width-2 length-limit">
                </div>
            </div>
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="StartYear" class="govuk-label govuk-date-input__label">Year</label>
                    <input asp-for="StartYear" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="4" min="1900" max="9999"
                           class="govuk-input govuk-date-input__input govuk-input--width-4 length-limit" />
                </div>
            </div>
        </div>
    </fieldset>
</div>
<div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.EndDate, "govuk-form-group--error")">
    <fieldset class="govuk-fieldset" aria-describedby="finish-date-hint" role="group">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
            Planned training end date
        </legend>
        <span id="finish-date-hint" class="govuk-hint">
            For example, 09 2019
        </span>
        @Html.ValidationMessageFor(m => m.EndDate, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.EndDate) })
        <div class="govuk-date-input">
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="EndMonth" class="govuk-label govuk-date-input__label">Month</label>
                    <input asp-for="EndMonth" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="2" min="1" max="12"
                           class="govuk-input govuk-date-input__input govuk-input--width-2 length-limit" />
                </div>
            </div>
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="EndYear" class="govuk-label govuk-date-input__label">Year</label>
                    <input asp-for="EndYear" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="4" min="1900" max="9999"
                           class="govuk-input govuk-date-input__input govuk-input--width-4 length-limit" />
                </div>
            </div>
        </div>
    </fieldset>
</div>
<div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Cost, "govuk-form-group--error")">
    <label asp-for="Cost" class="govuk-label govuk-!-font-weight-bold">Total agreed apprenticeship price (excluding VAT)</label>
    <span id="price-hint" class="govuk-hint">
        Enter the price, including any end-point assessment costs, in whole pounds. For example, for £1,500 enter 1500
    </span>
    @Html.ValidationMessageFor(m => m.Cost, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Cost) })
    <input asp-for="Cost" class="govuk-input govuk-input--width-5" inputmode="numeric" pattern="[0-9]*" maxlength="7" min="1" max="9999999" />
</div>

<div class="govuk-character-count" data-module="character-count" data-maxlength="20">
    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Reference, "govuk-form-group--error")">
        <label asp-for="Reference" class="govuk-label govuk-!-font-weight-bold">Reference (optional)</label>
        <span class="govuk-hint">
            Add a reference, such as employee number or location - this won't be seen by the training provider
        </span>
        @Html.ValidationMessageFor(m => m.Reference, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Reference) })

        <input maxlength="20" asp-for="Reference" class="govuk-input govuk-!-width-three-quarters js-character-count" />
    </div>
</div>

<div class="govuk-inset-text">
    <h3 class="govuk-heading-s">End-point assessments</h3>
    <p>We'll ask you to confirm the <a class="govuk-link" href="https://www.gov.uk/government/publications/using-the-register-of-apprentice-assessment-organisations" target="_blank" title="Opens in a new window">apprentice assessment organisation</a> for this apprentice. We'll do this before the end of the apprenticeship.</p>
</div>