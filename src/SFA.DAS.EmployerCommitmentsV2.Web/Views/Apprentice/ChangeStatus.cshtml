@inject ILinkGenerator LinkGenerator
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice 
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice.ChangeStatusRequestViewModel

@{
    ViewBag.Title = "Which status change would you like to make?";
    ViewBag.Section = "apprentices";
    ViewBag.PageId = "change-apprentice-status";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">@ViewBag.Title</h1>

        <legend class="form-label-bold">Pause an apprenticeship to:</legend>
        <ul class="list-bullet">
            <li>record a break in learning as agreed with the training provider</li>
            <li>freeze future payments to a training provider for a period of time</li>
        </ul>
        <legend class="form-label-bold">Stop an apprenticeship to:</legend>
        <ul class="list-bullet">
            <li>change your training provider during the lifetime of a course</li>
            <li>cancel all future payments</li>
        </ul>

        <div class="notice">
            <i class="icon icon-important">
                <span class="visually-hidden">Warning</span>
            </i>
            <strong class="bold-small">
                Do not stop completed apprenticeships.
            </strong>
        </div>
        <br />
        <form method="post">

            <div class="govuk-form-group  @(ViewData.ModelState.IsValid ? "" : "govuk-form-group--error")">
                <fieldset class="govuk-fieldset">
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ContainsKey(nameof(ChangeStatusRequestViewModel.SelectedStatusChange)))
                    {
                        <span id="error-message-@nameof(ChangeStatusRequestViewModel.SelectedStatusChange)" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(ChangeStatusRequestViewModel.SelectedStatusChange)].Errors.First().ErrorMessage
                        </span>
                    }
                    <div class="govuk-radios">
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="SelectedStatusChange-Pause" name="SelectedStatusChange" type="radio" value="@ChangeStatusType.Pause">
                            <label class="govuk-label govuk-radios__label" for="electedStatusChange-Pause">
                                Pause this apprenticeship
                            </label>
                        </div>
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="SelectedStatusChange-Stop" name="SelectedStatusChange" type="radio" value="@ChangeStatusType.Stop">
                            <label class="govuk-label govuk-radios__label" for="electedStatusChange-Pause">
                                Stop this apprenticeship
                            </label>
                        </div>
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="SelectedStatusChange-GoBack" name="SelectedStatusChange" type="radio" value="@ChangeStatusType.GoBack">
                            <label class="govuk-label govuk-radios__label" for="SelectedStatusChange-Pause">
                                Go back to apprentice details
                            </label>
                        </div>
                    </div>
                </fieldset>
            </div>

            <button id="continue-button" type="submit" class="govuk-button">Continue</button>
        </form>

        @*<form method="POST" action="@Url.RouteUrl("PostChangeStatusSelectOption")" onsubmit="sfa.tagHelper.submitRadioForm('@ViewBag.Title')">
            @Html.AntiForgeryToken()
            <h1 class="heading-xlarge">@ViewBag.Title</h1>



            <legend class="form-label-bold">Pause an apprenticeship to:</legend>
            <ul class="list-bullet">
                <li>record a break in learning as agreed with the training provider</li>
                <li>freeze future payments to a training provider for a period of time</li>
            </ul>
            <legend class="form-label-bold">Stop an apprenticeship to:</legend>
            <ul class="list-bullet">
                <li>change your training provider during the lifetime of a course</li>
                <li>cancel all future payments</li>
            </ul>

            <div class="notice">
                <i class="icon icon-important">
                    <span class="visually-hidden">Warning</span>
                </i>
                <strong class="bold-small">
                    Do not stop completed apprenticeships.
                </strong>
            </div>
            <br />
            <div class="form-group @Html.AddClassIfPropertyInError(x => x., "govuk-form-group--error")">
                <fieldset>
                    @Html.ValidationMessage("ChangeType", "Select whether to change this apprenticeship status or not", new { id = "error-message-ChangeType" })

                    @if (Model.Data.IsCurrentlyPaused)
                    {
                        <label for=@($"ChangeType-{ChangeStatusType.Resume}") class="block-label selection-button-radio">
                            @Html.RadioButton("ChangeType", ChangeStatusType.Resume, new { id = $"ChangeType-{ChangeStatusType.Resume}", dataOptionName = $"{ChangeStatusType.Resume}", onclick = $"sfa.tagHelper.radioButtonClick('{ViewBag.Title}', '{ChangeStatusType.Resume}')" })
                            Resume this apprenticeship
                        </label>
                    }
                    else
                    {
                    <label for=@($"ChangeType-{ChangeStatusType.Pause}") class="block-label selection-button-radio">
                        @Html.RadioButton("ChangeType", ChangeStatusType.Pause, new { id = $"ChangeType-{ChangeStatusType.Pause}", dataOptionName = $"{ChangeStatusType.Pause}", onclick = $"sfa.tagHelper.radioButtonClick('{ViewBag.Title}', '{ChangeStatusType.Pause}')" })
                        Pause this apprenticeship
                    </label>
                    }

                    <label for=@($"ChangeType-{ChangeStatusType.Stop}") class="block-label selection-button-radio">
                        @Html.RadioButton("ChangeType", ChangeStatusType.Stop, new { id = $"ChangeType-{ChangeStatusType.Stop}", dataOptionName = $"{ChangeStatusType.Stop}", onclick = $"sfa.tagHelper.radioButtonClick('{ViewBag.Title}', '{ChangeStatusType.Stop}')" })
                        Stop this apprenticeship
                    </label>

                    <label for=@($"ChangeType-{ChangeStatusType.None}") class="block-label selection-button-radio">
                        @Html.RadioButton("ChangeType", ChangeStatusType.None, new { id = $"ChangeType-{ChangeStatusType.None}", dataOptionName = $"{ChangeStatusType.None}", onclick = $"sfa.tagHelper.radioButtonClick('{ViewBag.Title}', '{ChangeStatusType.None}')" })
                        Go back to apprentice details
                    </label>


                </fieldset>
            </div>
            <button class="button" type="submit" id="submit-change-status">Save and continue</button>
        </form>*@
    </div>
</div>



