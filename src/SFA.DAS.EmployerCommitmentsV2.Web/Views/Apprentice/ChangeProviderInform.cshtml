@inject ILinkGenerator LinkGenerator;
@using SFA.DAS.EmployerCommitmentsV2.Web.Extensions
@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice
@using SFA.DAS.EmployerCommitmentsV2.Web.RouteValues
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice.ChangeProviderInformViewModel;

@{
    ViewData["Title"] = "Changing training provider - Apprenticeship service - GOV.UK";
}

<div class="das-panel das-panel--featured das-!-text-align-left">
    <h1 class="das-panel__heading govuk-!-margin-top-0">
        Changing training provider
    </h1>
    <div class="govuk-!-width-two-thirds das-panel__body">

        @if (Model.ApprenticeshipStatus != ApprenticeshipStatus.WaitingToStart ||
            Model.ApprenticeshipStatus != ApprenticeshipStatus.Live ||
            Model.ApprenticeshipStatus != ApprenticeshipStatus.Paused)
        {
            <div class="govuk-warning-text">
                <span class="govuk-warning-text__icon das-warning-text__icon--blue das-warning-text__icon--valign-middle" aria-hidden="true">!</span>
                <strong class="govuk-warning-text__text das-!-colour-inherit">
                    <span class="govuk-warning-text__assistive">Warning</span>
                    You need to stop the apprenticeship record with the current training provider before you can change training providers.
                </strong>
            </div>
        }

        <p class="govuk-body das-!-colour-inherit">
            Before you request this change, you must contact the new training provider to agree the new training dates and price.
        </p>
        <p class="govuk-body das-!-colour-inherit">
            You should only change your apprentice's training provider if:
        </p>
        <ul class="govuk-list govuk-list--bullet das-!-colour-inherit">
            <li>
                you're not happy with their performance
            </li>
            <li>
                they've stopped delivering the apprentice's training course
            </li>
            <li>
                they're shutting down or have already shut down
            </li>
        </ul>
    </div>
    
    
    @{

        switch (Model.ApprenticeshipStatus)
        {
            case ApprenticeshipStatus.WaitingToStart:
                <a class="govuk-button das-button--inverted govuk-!-font-weight-bold govuk-!-margin-top-2"
                   href="@LinkGenerator.HasLearnerBeenMadeRedundant(Model.ApprenticeshipHashedId, ChangeStatusType.Stop.ToString().ToLower())">
                     Continue
                </a>
                break;
            case ApprenticeshipStatus.Live:
                <a class="govuk-button das-button--inverted govuk-!-font-weight-bold govuk-!-margin-top-2"
                   href="@LinkGenerator.WhenToApplyStopApprentice(Model.ApprenticeshipHashedId, ChangeStatusType.Stop.ToString().ToLower())">
                    Continue
                </a>
                break;
            case ApprenticeshipStatus.Paused:
                <a class="govuk-button das-button--inverted govuk-!-font-weight-bold govuk-!-margin-top-2"
                   href="@LinkGenerator.WhenToApplyStopApprentice(Model.ApprenticeshipHashedId, ChangeStatusType.Stop.ToString().ToLower())">
                    Continue
                </a>
                break;
            case ApprenticeshipStatus.Stopped:
                <a class="govuk-button das-button--inverted govuk-!-font-weight-bold govuk-!-margin-top-2"
                   asp-route="@RouteNames.EnterNewTrainingProvider">
                     Continue
                </a>
                break;
        }
    }

    <p class="govuk-body-s govuk-!-margin-top-0 govuk-!-margin-bottom-0">
        <a class="das-panel__link" href="@LinkGenerator.EmployerHome(Model.AccountHashedId)">Cancel and return to account home</a>
    </p>
</div>

@section Back
{
    <div class="das-js-back-link"></div>
}