@inject ILinkGenerator LinkGenerator
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice
@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.EmployerCommitmentsV2.Web.Extensions
@using SFA.DAS.EmployerCommitmentsV2.Web.RouteValues

@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice.ApprenticeshipDetailsRequestViewModel

@{
    ViewBag.Title = "Apprentice detail - Manage Apprentices";
    ViewBag.Section = "apprentices";
    ViewBag.PageId = "apprentices-detail";
    ViewBag.GaData.Vpv = "/accounts/apprentices/manage/apprentice-details";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <partial name="DetailsPartials/_ActionRequiredBanner" />
        <partial name="DetailsPartials/_ChangesToThisApprenticeshipBanner" />

        <h1 class="govuk-heading-xl" id="learnerName">@Model.ApprenticeName</h1>

        @{ if (Model.ApprenticeshipStatus != ApprenticeshipStatus.Stopped && Model.ApprenticeshipStatus != ApprenticeshipStatus.Completed)
            {
                <p class="govuk-body">
                    Edit details if there's a change in apprentice or apprenticeship circumstances.
                </p>
            }
        }
        @if (Model.ConfirmationStatus == ConfirmationStatus.Overdue)
        {
            <details class="govuk-details" data-module="govuk-details">
                <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">
                        Help with your apprentice’s overdue confirmation
                    </span>
                </summary>
                <div class="govuk-details__text">
                    <p>If your apprentice has not confirmed their apprenticeship details within the 14 day deadline, you should:</p>
                    <ul class="govuk-list govuk-list--bullet">
                        <li>
                            contact the apprentice to complete their apprenticeship confirmation
                        </li>
                    </ul>
                </div>
            </details>
        }

        <table id="app-status" class="govuk-table govuk-!-margin-bottom-8">
            <tbody>
                <tr>
                    <th scope="row" class="govuk-table__header das-table-cell-width-45">Status</th>

                    <td class="govuk-table__cell das-table-cell-width-40">
                        <strong class="govuk-tag @Model.ApprenticeshipStatus.GetDisplayClass()">
                            @Model.ApprenticeshipStatus.GetDescription()
                        </strong>
                    </td>

                    <td id="editStatusLink" class="govuk-table__cell das-table-cell-width-15 govuk-table__cell--numeric">
                        @if (Model.CanEditStatus)
                        {
                            <a id="edit-status-link" href="@Url.Action("ChangeStatus", new ChangeStatusRequest { AccountHashedId = Model.AccountHashedId, ApprenticeshipHashedId = Model.HashedApprenticeshipId })" class="govuk-link">Edit status</a>
                        }
                    </td>
                </tr>
                @if (@Model.ApprenticeshipStatus == ApprenticeshipStatus.Paused)
                {
                    <tr>
                        <th scope="row" class="govuk-table__header">Apprenticeship pause date</th>
                        <td id="pauseDate" class="govuk-table__cell" colspan="2">
                            @if (Model.PauseDate.HasValue)
                            {
                                @Model.PauseDate.Value.ToGdsFormat()
                            }
                        </td>
                    </tr>
                }

                @if (@Model.ApprenticeshipStatus == ApprenticeshipStatus.Completed)
                {
                    <tr>
                        <th scope="row" class="govuk-table__header">Completion payment month</th>
                        <td id="completionDate" class="govuk-table__cell" colspan="2">
                            @if (Model.CompletionDate.HasValue)
                            {
                                @Model.CompletionDate.Value.ToGdsFormatLongMonthNameWithoutDay();
                            }
                        </td>
                    </tr>
                }

                @if (Model.ApprenticeshipStatus == ApprenticeshipStatus.Stopped)
                {
                    <tr>
                        <th scope="row" class="govuk-table__header">Stopped date</th>
                        <td id="stopDate" class="govuk-table__cell">
                            @if (Model.StopDate.HasValue)
                            {
                                @Model.StopDate.Value.ToGdsFormatLongMonthWithoutDay()
                            }
                        </td>
                        <td id="editStopDateLink" class="govuk-table__cell govuk-table__cell--numeric">
                            <a id="edit-stopped-link" class="govuk-link" href="@Url.Action("EditStopDate", new EditStopDateRequest {AccountHashedId = Model.AccountHashedId, ApprenticeshipHashedId = Model.HashedApprenticeshipId})">Edit</a>
                        </td>
                    </tr>

                    @if (Model.MadeRedundant.HasValue)
                    {
                        <tr>
                            <th scope="row" class="govuk-table__header">Made redundant</th>
                            <td id="madeRedundant" class="govuk-table__cell" colspan="2">
                                @(Model.MadeRedundant.Value ? "Yes" : "No")
                            </td>
                        </tr>
                    }
                }
                <tr>
                    <th scope="row" class="govuk-table__header">Apprentice confirmation</th>
                    <td id="confirationStatus" class="govuk-table__cell" colspan="2">
                        @Model.ConfirmationStatus.ToDisplayString()
                    </td>
                </tr>
                <tr>
                    <th scope="row" class="govuk-table__header">Training provider</th>
                    <td class="govuk-table__cell">@Model.ProviderName</td>
                    @if (Model.ShowChangeTrainingProviderLink)
                    {
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            <a id="change-training-provider-link" class="govuk-link" href="@Url.Action("ChangeProviderInform", new  ChangeProviderInformRequest{ AccountHashedId = Model.AccountHashedId ,  ApprenticeshipHashedId = Model.HashedApprenticeshipId })">Change<span class="govuk-visually-hidden"> training provider</span></a>
                        </td>
                    }
                    else
                    {
                        <td class="govuk-table__cell"></td>
                    }
                </tr>
                <tr>
                    <th scope="row" class="govuk-table__header">Cohort reference</th>
                    <td id="cohort-reference" class="govuk-table__cell">@Model.CohortReference</td>
                    <td class="govuk-table__cell"></td>
                </tr>
                @if (Model.TrainingProviderHistory != null && Model.TrainingProviderHistory.Count > 1)
                {
                    <tr>
                        <th scope="row" class="govuk-table__header">Training provider history</th>
                        <td id="training-provider-history" class="govuk-table__cell">
                            @foreach (var trainingProvider in Model.TrainingProviderHistory)
                            {
                                <p class="govuk-body">
                                    @if (trainingProvider.ShowLink)
                                    {
                                        <a href="@Url.Action("ApprenticeshipDetails", new ApprenticeshipDetailsRequest { AccountHashedId = Model.AccountHashedId, ApprenticeshipHashedId = trainingProvider.HashedApprenticeshipId })">@trainingProvider.ProviderName</a><br>
                                    }
                                    else
                                    {
                                        <span>@trainingProvider.ProviderName</span><br />
                                    }
                                    <span class="govuk-body-s">@trainingProvider.FromDate.ToString("MMM yyyy") to @trainingProvider.ToDate.ToString("MMM yyyy")</span>
                                </p>
                            }
                        </td>
                        <td class="govuk-table__cell"></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="govuk-grid-row govuk-!-margin-bottom-2">
            <div class="govuk-grid-column-two-thirds">
                <h2 class="govuk-heading-m">Apprentice details</h2>
            </div>
            <div class="govuk-grid-column-one-third das-!-text-align-right--from-tablet">
                @if (Model.EnableEdit)
                {
                    <a id="edit-apprentice-link" href="@Url.Action("EditApprenticeship", new { AccountHashedId = Model.AccountHashedId, ApprenticeshipHashedId = Model.HashedApprenticeshipId })" class="govuk-link govuk-body">Edit<span class="govuk-visually-hidden"> apprentice details</span></a>
                }
            </div>
        </div>
        <table class="govuk-table govuk-!-margin-bottom-8">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header  das-table-cell-width-45">Name</th>
                    <td id="apprentice-name" class="govuk-table__cell das-table-cell-width-55">@Model.ApprenticeName</td>
                </tr>
                @if (!string.IsNullOrEmpty(Model.Email) || Model.EmailShouldBePresent)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Email address</th>
                        
                        <td class="govuk-table__cell">
                            <table>
                                <tr>
                                    <td id="email-address">@Model.Email</td>
                                </tr>
                                @if (Model.CanResendInvitation)
                                {
                                    <tr>
                                        <td>
                                            <a id="resend-email-invitation-link" href="@Url.Action("ResendEmailInvitation", new ResendEmailInvitationRequest { AccountHashedId = Model.AccountHashedId, ApprenticeshipHashedId = Model.HashedApprenticeshipId })" class="govuk-link">Resend invitation email</a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </td>
                    </tr>
                }
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Unique learner number</th>
                    <td id="uln" class="govuk-table__cell">@Model.ULN</td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Date of birth</th>
                    <td id="date-of-birth" class="govuk-table__cell">
                        @if (Model.DateOfBirth.HasValue)
                        {
                            @Model.DateOfBirth.Value.ToGdsFormat()
                        }
                    </td>
                </tr>
            </tbody>
        </table>

        <h2 class="govuk-heading-m">
            Apprenticeship details
        </h2>
        <table class="govuk-table  govuk-!-margin-bottom-8">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header das-table-cell-width-45">Apprenticeship training course </th>
                    <td class="govuk-table__cell das-table-cell-width-55" colspan="2">@Model.TrainingName </td>
                </tr>
                @if (!string.IsNullOrEmpty(Model.Version))
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header"> Version </th>
                        <td id="version" class="govuk-table__cell" colspan="2">@Model.Version </td>
                        @if (Model.EnableEdit && Model.HasNewerVersions)
                        {
                            <td class="govuk-table__cell govuk-table__cell--numeric">
                                <a id="change-training-provider-link" class="govuk-link" href="@Url.RouteUrl(RouteNames.ChangeVersion)">Change</a>
                            </td>
                        }
                        else
                        {
                            <td class="govuk-table__cell"></td>
                        }
                    </tr>
                }
                @if (Model.TrainingType == ProgrammeType.Standard && Model.ShowOptions)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header"> Option </th>
                        <td id="option" class="govuk-table__cell" colspan="2">@(!string.IsNullOrEmpty(Model.Option) ? Model.Option : "To be confirmed")</td>
                        @if (Model.EnableEdit && !Model.OnlySingleOption)
                        {
                            <td class="govuk-table__cell govuk-table__cell--numeric">
                                <a id="change-option-link" class="govuk-link" href="@Url.RouteUrl(RouteNames.ChangeOption)">Change<span class="govuk-visually-hidden"> option</span></a>
                            </td>
                        }
                        else
                        {
                            <td class="govuk-table__cell"></td>
                        }
                    </tr>
                }
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Planned training start date</th>
                    <td id="start-date" class="govuk-table__cell" colspan="2">
                        @if (@Model.StartDate.HasValue)
                        {
                            @Model.StartDate.Value.ToGdsFormatLongMonthWithoutDay()
                        }
                    </td>
                    <td class="govuk-table__cell"></td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Planned training finish date</th>
                    <td id="end-date" class="govuk-table__cell" colspan="2">
                        @if (Model.EndDate.HasValue)
                        {
                            @Model.EndDate.Value.ToGdsFormatLongMonthWithoutDay()
                        }
                    </td>
                    @if (Model.ApprenticeshipStatus == ApprenticeshipStatus.Completed)
                    {
                        <td class="govuk-table__cell">
                            <a id="edit-end-date-link" class="govuk-link" href="@Url.Action("EditEndDate", new EditEndDateRequest { AccountHashedId = Model.AccountHashedId, ApprenticeshipHashedId = Model.HashedApprenticeshipId })">Edit<span class="govuk-visually-hidden"> end date</span></a>
                        </td>
                    }
                    else
                    {
                        <td class="govuk-table__cell"></td>
                    }
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Total agreed apprenticeship price</th>
                    <td id="apprentice-cost" class="govuk-table__cell" colspan="2">@Model.Cost.FormatCost() excluding VAT</td>
                    <td class="govuk-table__cell"></td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Reference </th>
                    <td id="employer-reference" class="govuk-table__cell" colspan="2">@Model.EmployerReference</td>
                    <td class="govuk-table__cell"></td>
                </tr>
                @if (Model.TrainingType == ProgrammeType.Standard)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">End-point assessor</th>
                        <td id="end-point-assessor" class="govuk-table__cell" colspan="2">@(Model.EndpointAssessorName ?? "The end-point assessor has not been declared")</td>
                        <td class="govuk-table__cell"></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section back {
    <a id="back-link" class="govuk-back-link" href="@Url.Action("Index", new IndexRequest { AccountHashedId = Model.AccountHashedId, FromSearch = true})">Back to manage your apprentices</a>
}