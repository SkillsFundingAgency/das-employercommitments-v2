@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.EmployerCommitmentsV2.Web.Extensions
@using SFA.DAS.EmployerCommitmentsV2.Web.RouteValues
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Apprentice.ConfirmEditApprenticeshipViewModel

@{
    ViewBag.Title = "Confirm changes";
    ViewBag.Section = "apprentices";
    ViewBag.PageID = "confirm-edited-changes";
    ViewBag.GaData.Vpv = "/accounts/apprentices/manage/confirm-edited-changes";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ValidationSummary" />
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-width-container">
        <h1 class="govuk-heading-xl"> @ViewBag.Title</h1>
        <form method="POST">

            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.AccountHashedId)
            @Html.HiddenFor(x => x.ApprenticeshipHashedId)
            @Html.HiddenFor(x => x.FirstName)
            @Html.HiddenFor(x => x.LastName)
            @Html.HiddenFor(x => x.Email)
            @Html.HiddenFor(x => x.StartMonth)
            @Html.HiddenFor(x => x.StartYear)
            @Html.HiddenFor(x => x.EndMonth)
            @Html.HiddenFor(x => x.EndYear)
            @Html.HiddenFor(x => x.BirthMonth)
            @Html.HiddenFor(x => x.BirthYear)
            @Html.HiddenFor(x => x.BirthDay)
            @Html.HiddenFor(x => x.Cost)
            @Html.HiddenFor(x => x.CourseCode)
            @Html.HiddenFor(x => x.Version)
            @Html.HiddenFor(x => x.EmployerReference)
            @Html.HiddenFor(x => x.ProviderName)

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <dl class="govuk-summary-list">
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key"> Name </dt>
                            <dd class="govuk-summary-list__value"> @Model.OriginalApprenticeship.Name</dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key"> Unique learner number </dt>
                            <dd class="govuk-summary-list__value"> @Model.OriginalApprenticeship.ULN</dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key"> Apprenticeship training course </dt>
                            <dd class="govuk-summary-list__value"> @Model.OriginalApprenticeship.CourseName</dd>
                        </div>
                    </dl>
                </div>
            </div>

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <table class="govuk-table">
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th class="govuk-table__header"></th>
                                <th scope="col" class="govuk-table__header ">Current</th>
                                <th scope="col" class="govuk-table__header ">Changed to</th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">

                            @if (!string.IsNullOrWhiteSpace(Model.Name))
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Name</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.Name</td>
                                    <td class="govuk-table__cell">@Model.Name</td>

                                </tr>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.Email))
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Email address</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.Email</td>
                                    <td class="govuk-table__cell">@Model.Email</td>

                                </tr>
                            }
                            @if (Model.DateOfBirth.HasValue)
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Date of birth</th>
                                    <td class="govuk-table__cell">
                                        @Model.OriginalApprenticeship.DateOfBirth.Value.ToGdsFormat()
                                    </td>
                                    <td class="govuk-table__cell">@Model.DateOfBirth.Value.ToGdsFormat()</td>

                                </tr>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.CourseCode))
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Apprenticeship training course</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.CourseName </td>
                                    <td class="govuk-table__cell">@Model.CourseName</td>
                                </tr>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.Version))
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Version</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.Version </td>
                                    <td class="govuk-table__cell">@Model.Version</td>
                                </tr>
                            }
                            @if (Model.StartDate.HasValue)
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Planned training start date</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.StartDate.Value.ToGdsFormat() </td>
                                    <td class="govuk-table__cell">@Model.StartDate.Value.ToGdsFormat()</td>

                                </tr>
                            }
                            @if (Model.EndDate.HasValue)
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Planned training end date</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.EndDate.Value.ToGdsFormat() </td>
                                    <td class="govuk-table__cell">@Model.EndDate.Value.ToGdsFormat()</td>

                                </tr>
                            }

                            @if (Model.Cost.HasValue)
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Cost</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.Cost.FormatCost() </td>
                                    <td class="govuk-table__cell">@Model.Cost.FormatCost()</td>

                                </tr>
                            }


                            @if (Model.EmployerReference != Model.OriginalApprenticeship.EmployerReference)
                            {
                                <tr>
                                    <th scope="row" class="govuk-table__header">Reference</th>
                                    <td class="govuk-table__cell">@Model.OriginalApprenticeship.EmployerReference</td>
                                    <td class="govuk-table__cell">@Model.EmployerReference</td>

                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            </div>

            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.ConfirmChanges,  "govuk-form-group--error")">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h1 class="govuk-fieldset__heading">
                            Do you want to make these changes?
                        </h1>
                    </legend>
                    <div class="govuk-radios">
                        @Html.ValidationMessageFor(m => m.ConfirmChanges, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.ConfirmChanges) })
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="ConfirmChanges" name="ConfirmChanges" type="radio" value="true">
                            <label class="govuk-label govuk-radios__label" for="ConfirmChanges">
                                Yes, change these details
                            </label>
                        </div>
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="ConfirmChanges-no" name="ConfirmChanges" type="radio" value="false">
                            <label class="govuk-label govuk-radios__label" for="ConfirmChanges-no">
                                No, don't change these details
                            </label>
                        </div>
                    </div>
                </fieldset>
            </div>

            <button type="submit" class="govuk-button" aria-label="Finish" id="submit-confirm-change">Finish</button>
        </form>
    </div>
</div>

@section back {

    @if (!string.IsNullOrEmpty(Model.Version))
    {
        <a id="back-link" class="govuk-back-link" href="@Url.RouteUrl(RouteNames.ChangeVersion)">Back</a>
    }
    else
    {
        <a id="back-link" class="govuk-back-link" href="@Url.RouteUrl(RouteNames.EditApprenticeship)">Back</a>
    }
}