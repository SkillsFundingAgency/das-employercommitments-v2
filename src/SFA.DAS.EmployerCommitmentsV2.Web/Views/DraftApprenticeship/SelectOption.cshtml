@using SFA.DAS.CommitmentsV2.Shared.Extensions
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.DraftApprenticeship.SelectOptionViewModel

@{
    ViewData["Title"] = "Select a standard option";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <partial name="_ValidationSummary" />

        <h1 class="govuk-heading-xl">Select a standard option</h1>

        @if (!string.IsNullOrEmpty(Model.StandardUrl))
        {
            <div class="govuk-inset-text">
                <p class="govuk-body">For more information visit <a class="govuk-link" href="@Model.StandardUrl" target="_blank">the IfATE page for this standard (opens in a new tab)</a>.</p>
            </div>
        }

        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key"> Apprenticeship training course </dt>
                <dd class="govuk-summary-list__value"> @Model.StandardTitle </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key"> Version </dt>
                <dd class="govuk-summary-list__value"> @Model.Version </dd>
            </div>
        </dl>
    </div>
</div>

<form id="selectOption" method="post">
    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.CourseOption, "govuk-form-group--error")">
        <input type="hidden" asp-for="DraftApprenticeshipId" />      
        <input type="hidden" asp-for="CohortId" />
    
        <div id="select-an-option-hint" class="govuk-hint">
            Select an option
        </div>

        @Html.ValidationMessageFor(m => m.CourseOption, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.CourseOption) })

        <div class="govuk-radios">
            @foreach (var option in Model.Options.Select((Value, Index) => new { Value, Index }))
            {
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" type="radio" id="option-@option.Index" name="CourseOption" value="@option.Value" checked="@(Model.CourseOption == option.Value)">
                    <label class="govuk-label govuk-radios__label" for="option-@option.Index">@option.Value</label>
                </div>
            }

            <div class="govuk-radios__divider">or</div>

            <div class="govuk-radios__item">
                <input class="govuk-radios__input" type="radio" id="option-choose-later" name="CourseOption" value="N/A" checked="@(Model.CourseOption == string.Empty)">
                <label class="govuk-label govuk-radios__label" for="option-choose-later"> Confirm option at a later date</label>
            </div>
        </div>
    </div>

    <button type="submit" id="continue-button" class="govuk-button">Save and continue</button>
</form>

@section back {
    <a id="back-link" class="govuk-back-link" href="@Url.RouteUrl("Details-Edit")">Back</a>
}
