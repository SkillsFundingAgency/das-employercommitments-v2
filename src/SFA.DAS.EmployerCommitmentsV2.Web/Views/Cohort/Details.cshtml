@using SFA.DAS.EmployerUrlHelper.Mvc
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.EmployerCommitmentsV2.Web.Models.Cohort
@using SFA.DAS.EmployerCommitmentsV2.Web.Models.DraftApprenticeship
@using SFA.DAS.EmployerCommitmentsV2.Web.Extensions
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Cohort.DetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle;
    ViewBag.GaData.Vpv = "/unapproved/cohort";
    ViewBag.GaData.Org = Model.LegalEntityName;
}

<div class="govuk-grid-row">
    <div>

        @if (Model.ShowRofjaaRemovalBanner)
        {
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <div class="govuk-notification-banner">
                        <div class="govuk-notification-banner__header">
                            <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                                Important
                            </h2>
                        </div>
                        <div class="govuk-notification-banner__content">
                            <p class="govuk-notification-banner__heading">
                                <strong>You are no longer on the Register of Flexi-Job Apprenticeship Agencies</strong>
                            </p>
                            <p>
                                You need to edit the delivery model for each Flexi-Job Apprenticeship or delete them.
                            </p>
                        </div>
                    </div>

                </div>
            </div>
        }

        @if ((!Model.IsAgreementSigned || !Model.IsCompleteForEmployer || Model.HasOverlappingUln ||
        Model.HasEmailOverlaps) && !Model.ShowRofjaaRemovalBanner)
        {
            <div class="govuk-notification-banner">
                <div class="govuk-notification-banner__header">
                    <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                        Important
                    </h2>
                </div>
                <div class="govuk-notification-banner__content">
                    <p class="govuk-notification-banner__heading">
                        You can’t approve this apprentice request until:
                    </p>
                    <ul>
                        @if (!Model.IsAgreementSigned)
                        {
                            <li>you have accepted your <a
                                    href="@Url.Action("ViewAgreement", "Cohort", new {Model.AccountHashedId})"
                                    class="govuk-link">employer agreement</a></li>
                        }
                        @if (Model.HasOverlappingUln)
                        {
                            <li>there are no overlapping training dates for your apprentices</li>
                        }
                        @if (Model.HasEmailOverlaps)
                        {
                            <li>each apprentice has a unique email address</li>
                        }
                        @if (!Model.IsCompleteForEmployer)
                        {
                            <li>all apprentice records are complete</li>
                        }
                    </ul>
                </div>
            </div>
        }
        <partial name="_ValidationSummary" />
        <h1 class="govuk-heading-xl">@Model.PageTitle</h1>

        <dl class="das-definition-list das-definition-list--inline">
            <dt class="das-definition-list__title govuk-!-margin-bottom-4">Organisation</dt>
            <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.LegalEntityName</dd>
            <dt class="das-definition-list__title">Reference</dt>
            <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.CohortReference</dd>
            <dt class="das-definition-list__title govuk-!-margin-bottom-4">Status</dt>
            <dd id="cohortStatus" class="das-definition-list__definition">@Model.Status</dd>
        </dl>

        <h2 class="govuk-heading-s">Message from @Model.ProviderName:</h2>
        <div class="govuk-inset-text">
            @if (string.IsNullOrWhiteSpace(@Model.Message))
            {
                <span>No message added.</span>
            }
            else
            {
                @Model.Message
            }
        </div>

        <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">

        @foreach (var course in Model.Courses)
        {
            <h3 class="govuk-heading-m">
                @course.Count x @course.DisplayCourseName
                @if (@course.DeliveryModel != DeliveryModel.Regular)
                {
                    <span class="govuk-tag">@course.DeliveryModel.ToDescription()</span>
                }
            </h3>
            @foreach (var draftApprenticeship in course.DraftApprenticeships)
            {
                if (draftApprenticeship.HasOverlappingUln && !course.ErrorHasOverlappingUlnDisplayed)
                {
                    <div class="govuk-inset-text das-inset-text--highlight">
                        <h3 class="govuk-heading-s">Apprenticeship can't have overlapping training dates</h3>
                        <p>
                            You must update training dates to be able to approve
                        </p>
                    </div>
                    course.ErrorHasOverlappingUlnDisplayed = true;
                }
                if (draftApprenticeship.HasOverlappingEmail && !course.ErrorEmailOverlapsDisplayed)
                {
                    <div class="govuk-inset-text das-inset-text--highlight">
                        <h3 class="govuk-heading-s">@course.EmailOverlaps.DisplayEmailOverlapsMessage</h3>
                        <p>
                            You must enter a unique email address for each apprentice.
                        </p>
                    </div>
                    course.ErrorEmailOverlapsDisplayed = true;
                }
                if (!draftApprenticeship.IsComplete && !course.ErrorIsCompletedDisplayed)
                {
                    <div class="govuk-inset-text das-inset-text--highlight">
                        <h3 class="govuk-heading-s">Apprentice record incomplete</h3>
                        <p>
                            You must complete the apprentice record to be able to approve.
                        </p>
                    </div>
                    course.ErrorIsCompletedDisplayed = true;
                }
                if (draftApprenticeship.ExceedsFundingBandCap && !course.ErrorFundingBandExcessDisplayed)
                {
                    <div class="govuk-inset-text das-inset-text--highlight">
                        <h3 class="govuk-heading-s">@course.FundingBandExcess.FundingBandCapExcessHeader</h3>
                        <p>
                            @course.FundingBandExcess.FundingBandCapExcessLabel
                            <text><a target="_blank"
                                    href="https://www.gov.uk/government/publications/apprenticeship-funding-bands">funding band
                                    maximum</a>@course.FundingBandExcess.DisplaySingleFundingBandCap</text>
                            You'll need to pay the difference directly to the training provider.
                        </p>
                    </div>
                    course.ErrorFundingBandExcessDisplayed = true;
                }
            }
            <table class="govuk-table das-table--responsive">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">Name</th>
                        <th scope="col" class="govuk-table__header">Date of birth</th>
                        <th scope="col" class="govuk-table__header">Training dates</th>
                        <th asp-show="@course.IsPortableFlexiJob" scope="col" class="govuk-table__header">Employment end
                            date</th>
                        <th asp-show="@course.IsPortableFlexiJob" scope="col" class="govuk-table__header">Training price for
                            this employment</th>
                        <th asp-show="@course.IsPortableFlexiJob" scope="col" class="govuk-table__header">Total training
                            price</th>
                        <th scope="col" class="govuk-table__header">Price</th>
                        <th scope="col" class="govuk-table__header"><span class="govuk-visually-hidden">Action</span></th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">

                    @foreach (var draftApprenticeship in course.DraftApprenticeships)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell" data-label="Name">
                                @if (draftApprenticeship.HasOverlappingEmail || !draftApprenticeship.IsComplete)
                                {
                                    <span class="das-table-cell--highlight das-breakable">@draftApprenticeship.DisplayName</span>
                                }
                                else
                                {
                                    <span class="das-breakable">@draftApprenticeship.DisplayName</span>
                                }
                            </td>
                            <td class="govuk-table__cell" data-label="Date of birth">@draftApprenticeship.DisplayDateOfBirth
                            </td>
                            <td class="govuk-table__cell" data-label="Training dates">
                                @if (draftApprenticeship.HasOverlappingUln)
                                {
                                    <span class="das-table-cell--highlight">
                                        @draftApprenticeship.DisplayTrainingDates
                                    </span>
                                }
                                else
                                {
                                    @draftApprenticeship.DisplayTrainingDates
                                }
                            </td>
                            <td asp-show="@course.IsPortableFlexiJob" class="govuk-table__cell"
                                data-label="Employment end date">
                                @draftApprenticeship.DisplayEmploymentDates
                            </td>
                            <td asp-show="@course.IsPortableFlexiJob" class="govuk-table__cell"
                                data-label="Training price for this employment">
                                @draftApprenticeship.DisplayEmploymentPrice
                            </td>
                            <td class="govuk-table__cell" data-label="Price">
                                @if (@draftApprenticeship.ExceedsFundingBandCap)
                                {
                                    <span class="das-table-cell--highlight">
                                        @draftApprenticeship.DisplayCost
                                    </span>
                                }
                                else
                                {
                                    @draftApprenticeship.DisplayCost
                                }
                            </td>
                            <td class="govuk-table__cell govuk-table__cell--numeric">
                                <a class="govuk-link edit-apprentice"
                                    href="@Url.RouteUrl("Details", new { @draftApprenticeship.DraftApprenticeshipHashedId, @Model.CohortReference, @Model.AccountHashedId })">
                                    @(Model.IsReadOnly ? "View" : "Edit")
                                    <span class="govuk-visually-hidden">@draftApprenticeship.DisplayName's details</span>
                                </a>
                                <br /><br />
                                @if (!Model.IsReadOnly)
                                {
                                    <a class="govuk-link delete-apprentice"
                                        href="@Url.RouteUrl("DeleteDraftApprenticeship", new { draftApprenticeship.DraftApprenticeshipHashedId, Model.CohortReference, Model.AccountHashedId, Origin = DeleteDraftApprenticeshipOrigin.CohortDetails })">
                                        Delete <span class="govuk-visually-hidden">@draftApprenticeship.DisplayName's details</span>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <table class="govuk-table">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header das-table-cell-width-80" scope="row">Total apprenticeship training
                        price <br>(excluding VAT)</th>
                    <td class="govuk-table__cell govuk-table__header--numeric das-table-cell-width-10">
                        <strong>@Model.DisplayTotalCost</strong></td>
                    <td class="govuk-table__cell das-table-cell-width-10" aria-hidden="true"></td>
                </tr>
            </tbody>
        </table>

        @if (!Model.IsReadOnly)
        {
            <p>
                @if (Model.ShowAddAnotherApprenticeOption)
                {
                    <a href="@Url.ReservationsLink($"accounts/{Model.AccountHashedId}/reservations/{Model.AccountLegalEntityHashedId}/select?cohortReference={Model.CohortReference}&transferSenderId={Model.TransferSenderHashedId}&encodedPledgeApplicationId={Model.EncodedPledgeApplicationId}")"
                        class="govuk-link add-apprentice">Add another apprentice</a>
                }
                <a asp-action="ConfirmDelete" asp-route-AccountHashedId="@Model.AccountHashedId"
                    asp-route-CohortReference="@Model.CohortReference" class="govuk-link das-float-right">Delete this
                    group</a>
            </p>

            <hr class="govuk-section-break govuk-section-break--l">

            <form id="submitCohort" novalidate method="post">
                <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.Selection, "govuk-form-group--error")">

                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            <h3 class="govuk-fieldset__heading">@Model.OptionsTitle</h3>
                        </legend>
                        @Html.ValidationMessageFor(m => m.Selection, null, new
                            {
                                @class = "govuk-error-message",
                                id =
                                 "error-message-" + Html.IdFor(m => m.Selection)
                            })
                        <div class="govuk-radios govuk-radios--conditional" data-module="radios">

                            @if (Model.ShowViewAgreementOption)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="radio-view" name="selection" type="radio"
                                        value="@CohortDetailsOptions.ViewEmployerAgreement"
                                        data-aria-controls="conditional-view">
                                    <label class="govuk-label govuk-radios__label" for="radio-view">
                                        View employer agreement
                                    </label>
                                </div>
                            }

                            @if (Model.EmployerCanApprove)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="radio-approve" name="selection" type="radio"
                                        value="@CohortDetailsOptions.Approve" data-aria-controls="conditional-approve">
                                    <label class="govuk-label govuk-radios__label" for="radio-approve">
                                        Yes, approve and notify training provider
                                    </label>
                                </div>
                            }
                            @if (Model.ShowApprovalOptionMessage)
                            {
                                <div class="govuk-radios__conditional govuk-radios__conditional--hidden"
                                    id="conditional-approve">
                                    <div class="govuk-form-group">
                                        <label class="govuk-label" for="approve-details">
                                            Leave @Model.ProviderName a message (optional)
                                        </label>
                                        <textarea class="govuk-textarea" id="approve-details" name="approvemessage"
                                            rows="5"></textarea>
                                    </div>
                                </div>
                            }
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="radio-send" name="selection" type="radio"
                                    value="@CohortDetailsOptions.Send" data-aria-controls="conditional-send">
                                <label class="govuk-label govuk-radios__label" for="radio-send">
                                    @Model.SendBackToProviderOptionMessage
                                </label>
                            </div>
                            <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-send">
                                <div class="govuk-form-group">
                                    <label class="govuk-label" for="send-details">
                                        Leave @Model.ProviderName a message (optional)
                                    </label>
                                    <textarea class="govuk-textarea" id="send-details" name="sendmessage"
                                        rows="5"></textarea>
                                </div>
                            </div>

                            @if (Model.ShowGotoHomePageOption)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="radio-home" name="selection" type="radio"
                                        value="@CohortDetailsOptions.Homepage">
                                    <label class="govuk-label govuk-radios__label" for="radio-home">
                                        Go to homepage
                                    </label>
                                </div>
                            }

                        </div>
                    </fieldset>
                </div>

                <button type="submit" id="continue-button" class="govuk-button">Save and submit</button>

                <p>
                    <a href="@Url.RouteUrl("Review", new { Model.AccountHashedId })" class="govuk-link">Save and exit</a>
                </p>

            </form>
        }

    </div>
</div>

@section Back
{
    <div class="das-js-back-link"></div>
}
