@using SFA.DAS.EmployerCommitmentsV2.Web.Models.Cohort
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.EmployerUrlHelper.Mvc

@{
    ViewBag.Title = "Choose organisation";
    ViewBag.GaData.Vpv = "/unapproved/legalEntity/create/choose-organisation";
}


@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Cohort.SelectLegalEntityViewModel

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <partial name="_ValidationSummary" />

        <h1 class="govuk-heading-xl">@ViewBag.Title</h1>

        <form method="POST">

        @Html.AntiForgeryToken()

        <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.LegalEntityId,  "govuk-form-group--error")">
            <fieldset class="govuk-fieldset">

                <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                    Which organisation is named on the contract with the training provider for the apprentices you’d like to add?
                </legend>

                @if (!ViewData.ModelState.IsValid)
                {
                    <span id="error-message-@nameof(SelectLegalEntityViewModel.LegalEntityId)" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(SelectLegalEntityViewModel.LegalEntityId)].Errors.First().ErrorMessage
                    </span>
                }
                <div class="govuk-radios">
                    @foreach (var entity in Model.LegalEntities)
                    {
                        <div class="govuk-radios__item" id="radio-item-legal-entity-code">
                            <input class="govuk-radios__input" id="LegalEntityId-@entity.Id" name="LegalEntityId" type="radio" value="@entity.Id">
                            <label class="govuk-label govuk-radios__label" for="LegalEntityId-@entity.Id">
                                @entity.Name
                            </label>
                        </div>
                    }
                </div>
            </fieldset>
        </div>

        <details id="service-help" class="govuk-details" data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    What is a contract for services?
                </span>
            </summary>
            <div class="govuk-details__text">
                <p> A contract for services is a formal agreement between a buyer and a supplier.</p>
                <p>In this case, the contract is between the organisation that's buying apprenticeship training for their apprentices and the training provider that's training the apprentices.</p>
                <p>If you're an employer-provider, for example, you won't need a contract for services as your organisation is both the buyer and the supplier.</p>
            </div>
        </details>

        @Html.Hidden("TransferConnectionCode", Model.TransferConnectionCode)
        @Html.Hidden("CohortRef", Model.CohortRef)
        @Html.HiddenFor(x => x.EncodedPledgeApplicationId)

        <button type="submit" class="govuk-button" id="submit-legal-entity">Continue</button>
        
        </form>
    </div>
</div>

@section Back
{
    @if (!string.IsNullOrWhiteSpace(Model.EncodedPledgeApplicationId))
    {
        <a href="@Url.LevyTransferMatchingLink($"accounts/{Model.AccountHashedId}/applications/{Model.EncodedPledgeApplicationId}")" id="back-link" class="govuk-back-link">Back</a>
    }
    else
    {
        <a id="back-link" class="govuk-back-link" href="@Url.Action("Index", "Home", new {Model.AccountHashedId})">Back to Apprentices</a>
    }

}