@using Microsoft.AspNetCore.Http
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.EmployerCommitmentsV2.Web.Models.Cohort
@using SFA.DAS.EmployerUrlHelper.Mvc
@model SFA.DAS.EmployerCommitmentsV2.Web.Models.Cohort.SelectProviderViewModel

@inject IHttpContextAccessor ContextAccessor;
@{
    ViewData["Title"] = "Apprenticeships";
    ViewBag.Title = "Add training provider details";
    ViewBag.GaData.Vpv = "/unapproved/add/select-provider";
    ViewBag.GaData.Org = Model.LegalEntityName;
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <partial name="_ValidationSummary" />
        <form method="post">
            <partial name="_SelectProviderHiddenPartial" model="@Model" />
            @Html.AntiForgeryToken()
            <div class="govuk-form-group">
                <h1 class="govuk-heading-l">Select your training provider</h1>               
                <p class="govuk-body">
                    Before you can add your apprentice, you need to add the training provider for this apprenticeship.
                </p>
                <div class=" @Html.AddClassIfPropertyInError(x => x.ProviderId, "govuk-form-group--error")">
                    <span id="provider-hint" class="govuk-hint">Start typing your training provider’s name or UKPRN, and
                        select from the suggestions</span>

                    @Html.ValidationMessageFor(m => m.ProviderId, null, new
                        {
                            @class = "govuk-error-message",
                            id =
                             "error-message-" + Html.IdFor(m => m.ProviderId)
                        })

                    <select id="Ukprn" name="ProviderId" asp-for="ProviderId"
                        class="govuk-select das-autocomplete-search @Html.AddClassIfPropertyInError(x => x.ProviderId, "govuk-select--error")">
                        <option class="das-js-hide" value="">Select training provider</option>
                        @foreach (var provider in Model.Providers)
                        {
                            <option value="@provider.Ukprn"> @provider.Name @provider.Ukprn</option>
                        }
                    </select>
                </div>

            </div>

            <details class="govuk-details" data-module="govuk-details">
                <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">
                        Help with training provider
                    </span>
                </summary>
                <div class="govuk-details__text">
                    <p>If you don’t have a training provider, you can search <a
                            href="https://www.gov.uk/employers-find-apprenticeship-training" target="_blank"
                            title="Opens in a new window" rel="noreferrer noopener" id="fat-link"
                            class="govuk-link">Find apprenticeship training</a>.</p>
                </div>
            </details>

            <button class="govuk-button" id="Ukprn-button" type="submit"> Continue </button>
        </form>


    </div>
</div>

@section Back {

    @if (Model.Origin == Origin.Reservations)
    {
        @Html.ActionLink("Back", "Index", "Cohort", new
            {
                Model.AccountHashedId,
                Model.AccountLegalEntityHashedId,
                Model.ReservationId,
                Model.CourseCode,
                Model.StartMonthYear
            }, new { @class = "govuk-back-link", id = "back-link" })
    }
    else if (Model.Origin == Origin.LevyTransferMatching && !string.IsNullOrEmpty(ContextAccessor.HttpContext?.Request.Query["EncodedPledgeApplicationId"].ToString()))
    {
        <a href="@Url.LevyTransferMatchingLink($"accounts/{Model.AccountHashedId}/applications/{Model.EncodedPledgeApplicationId}")"
            id="back-link" class="govuk-back-link">Back</a>
    }
    else if (Model.Origin == Origin.LevyTransferMatching && string.IsNullOrEmpty(ContextAccessor.HttpContext?.Request.Query["EncodedPledgeApplicationId"].ToString()))
    {
        <a href="@Url.Action("SelectFunding", "Cohort", new { Model.AccountHashedId, Model.ApprenticeshipSessionKey })" id="back-link" class="govuk-back-link">Back</a>
    }
    else
    {
        <a href="@Url.Action("Inform", "Cohort", new { Model.AccountHashedId})" id="back-link" class="govuk-back-link">Back</a>
    }
 }